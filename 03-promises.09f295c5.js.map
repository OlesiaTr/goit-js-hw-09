{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SASA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAhBM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAgB3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAA8BC,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACnBF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAEvB,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EAErDvB,EAAcuB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjB,OAAOJ,EAAA4B,OAAOC,QAAQ,sBAAqCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAElE2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClB,OAAOJ,EAAA4B,OAAOI,QAAQ,oBAAmCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGnEgB,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\n// Chooses whether to fulfill or reject the promise.\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  // Gets values from inputs.\n  let { delay, step, amount } = e.currentTarget;\n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    // Returns one promise that will be fulfilled or rejected after delay time.\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        return Notify.success(`Fullfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        return Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    // Adds delay on next step after each promise.\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay1","step","amount","Number","value","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.09f295c5.js.map"}