{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAMjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAZbJ,EAAKC,KAAKe,iBAAiB,UAgB3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC9B,MAAMhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAElC,IAAK,IAAIC,EAAW,EAAGA,GAAYhB,EAAQgB,GAAY,EAErDf,EAAce,EAAUH,GACrBI,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,KACVN,EAAA0B,OAAOC,QAAQ,sBAAsBjB,QAAeJ,SAE5DsB,OAAM,EAAClB,SAAEA,EAAQJ,MAAEA,KACXN,EAAA0B,OAAOG,QAAQ,oBAAoBnB,QAAeJ,SAG7De,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\n// Chooses whether to fulfill or reject the promise.\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  // Gets values from inputs.\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    // Returns one promise that will be fulfilled or rejected after delay time.\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        return Notify.success(`Fullfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        return Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    // Adds delay on next step after each promise.\n    delay += step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.6f8c3070.js.map"}